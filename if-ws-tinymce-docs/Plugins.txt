% Plugins 


`TinyMCE` bindings support creating plugins.


Following example is the direct translation of the example available at [TinyMCE-plugin].
A new editor is created with two custom buttons: 

	#fsharp
	type SampleControl () =
		inherit Web.Control()
	
		[<Inline "eval($s)">]
		let Raw s : 'T = failwith "raw" 
	
		[<JavaScript>]
		let Init(tId) =
			let listBoxConf =  
				new ControlConfiguration(
					Title = "My list box",
					Onselect = (fun (v) ->
						TinyMCE.ActiveEditor.WindowManager
											.Alert("Value selected:" + v)
					)
				)
	
			let splitButtonConf =  
				new ControlConfiguration(
					Title = "My split button",
					Image = "img/example.gif",
					Onclick = (fun () ->
						TinyMCE.ActiveEditor.WindowManager
											.Alert("Button was clicked.")
					)
				)
	
	
			let createMenu (name:string, cm:ControlManager) = 
				match name with
				| "mylistbox" -> 
					let mlb = cm.CreateListBox("mylistbox",  listBoxConf)
	
					mlb.Add("Some item 1", "val1")
					mlb.Add("Some item 2", "val2")
					mlb.Add("Some item 3", "val3")
	
	
					mlb :> TinyMce.Control
	
				| "mysplitbutton" -> 
					let c = cm.CreateSplitButton("mysplitbutton", 
													splitButtonConf )
	
					c.OnRenderMenu.Add (fun (c,m:DropMenu) ->
							m.Add(new ControlConfiguration(Title = "Some title", 
													Class = "mceMenuItemTitle"))
							|> ignore
	
							m.Add(new ControlConfiguration(Title = "Some item 1",
															Onclick = (fun () ->
										TinyMCE.ActiveEditor.WindowManager
												.Alert("Some  item 1 was clicked")
									)
								)
							) |> ignore
	
							m.Add(new ControlConfiguration(Title = "Some item 2", 
															Onclick = (fun () ->
										TinyMCE.ActiveEditor.WindowManager
												.Alert("Some  item 2 was clicked")
									)
								)
							) |> ignore
	
					) |> ignore
	
	
					c :> TinyMce.Control
	
				| _ -> null
	
	
			let plugin = new Plugin ( CreateControl = createMenu )
	
			TinyMCE.Create("tinymce.plugins.CustomListBoxSplitButtonPlugin", 
																	plugin)
	
			TinyMce.PluginManager.Add("exampleCustomListBoxSplitButton",
						Raw "tinymce.plugins.CustomListBoxSplitButtonPlugin")
	
			let editorConfig = 
				new TinyMCEConfiguration (
					Theme = "advanced",
					Mode = Mode.Exact,
					Elements = tId,
					Theme_advanced_toolbar_location = ToolbarLocation.Top,
					Plugins = "-exampleCustomListBoxSplitButton",
					Theme_advanced_buttons1 = "mylistbox,mysplitbutton,bold",
					Theme_advanced_buttons2 = "", 
					Theme_advanced_buttons3 = "",
					Theme_advanced_buttons4 = "" 
				)
			
	
			TinyMCE.Init(editorConfig)
	
	
		[<JavaScript>]
		override this.Body = 
			let tId = NewId()
			Div [
				TextArea [Attr.Id tId; Text "default content"]
				|>! OnAfterRender (fun el ->
						Init(tId)
				)
			]
			:> _



Result:

![Plugins](Plugins.png)\


[TinyMCE-plugin]: http://tinymce.moxiecode.com/tryit/listbox_splitbutton.php